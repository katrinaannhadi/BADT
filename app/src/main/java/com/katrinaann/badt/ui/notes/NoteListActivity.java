package com.katrinaann.badt.ui.notes;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import androidx.room.Room;

import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;

import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.katrinaann.badt.R;
import com.katrinaann.badt.adapters.NoteListAdapter;
import com.katrinaann.badt.database.NoteDatabase;
import com.katrinaann.badt.models.Notes;
import com.katrinaann.badt.ui.home.HomeActivity;

import java.util.ArrayList;
import java.util.List;

public class NoteListActivity extends AppCompatActivity {

    private RecyclerView recyclerView;
    private NoteListAdapter mAdapter;
    private Boolean wideScreen;
    private FloatingActionButton fabNewNote;
    private com.katrinaann.badt.database.NoteDatabase mDb;
    private static final String TAG = "NoteListActivity";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_note_list);

        //Instantiate recyclerview
        recyclerView = findViewById(R.id.rvList);
        recyclerView.setHasFixedSize(true);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        //Variable passed into the adapter to determine if the user is using a widescreen device
        wideScreen = findViewById(R.id.detail_container) != null;

        //Initialise and set adapter
        mAdapter = new NoteListAdapter(this, new ArrayList<Notes>(), wideScreen);
        recyclerView.setAdapter(mAdapter);

        setTitle("Your Notes");

        //Create Database
        mDb = Room.databaseBuilder(getApplicationContext(), NoteDatabase.class,"noteDB").build();

        //Execute the GetNoteTask to get the note list from the database and set the adapter to display them
        new GetNoteTask().execute();

        fabNewNote = findViewById(R.id.fabNewNote);

        //Set a listener for the "+" button to create a new note when pressed
        fabNewNote.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                //Create a new note and insert into database when the button is clicked
                new CreateNoteTask().execute();
            }
        });
    }

    //AsyncTask to get all the notes from the database table
    public class GetNoteTask extends AsyncTask <Void, Void, List<Notes>> {
        @Override
        protected List<Notes> doInBackground(Void... voids) {

            //Run the getNotes() method from NoteDao and return it to be used in onPostExecute()
            return mDb.noteDao().getNotes();
        }

        @Override
        protected void onPostExecute(List<Notes> notes) {

            //Set the list of notes in the adapter to the list of notes from the database so that the recyclerview shows the most accurate list
            mAdapter.setNotes(notes);
            Log.d(TAG, "Get Note: Success");
        }
    }

    //AsyncTask to create a note in the background
    public class CreateNoteTask extends AsyncTask<Void, Void, List<Notes>> {
        @Override
        protected List<Notes> doInBackground(Void... voids) {

            //Create a new note with placeholder values and insert it into the database
            //NoteID 0 means the ID is autogenerated since the it is set to @PrimaryKey (autoGenerate = true)
            Notes newNote = new Notes(0,"New Note", "New Note");
            mDb.noteDao().insertNote(newNote);
            Log.d(TAG, "createNoteTask doInBackground: SUCCESS");

            //Return the new list of notes (including the newly created one) to be used in onPostExecute()
            return mDb.noteDao().getNotes();
        }

        @Override
        protected void onPostExecute(List<Notes> notes) {
            //Update the adapter with the new list of notes (since doInBackground creates a new row in the database)
            mAdapter.setNotes(notes);
            Log.d(TAG, "createNoteTask onPostExecute: SUCCESS");
        }
    }

    //Override the back button to make sure that when back button is pressed on the this activity, it always goes back to "Home"
    //Overcomes issues with going back to NoteFragment when back is pressed after making changes to a note
    @Override
    public void onBackPressed() {
        startActivity(new Intent(this, HomeActivity.class));
    }
}
